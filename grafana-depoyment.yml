apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana-oss:latest
          ports:
            - containerPort: 3000
          volumeMounts:
            # 1. Mount the persistent storage for Grafana's database
            - name: grafana-storage
              mountPath: /var/lib/grafana
            # 2. Mount the external grafana.ini config
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            # 3. Mount the provisioned datasource config
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            # 4. Mount the provisioned dashboard config
            - name: grafana-dashboards-provider
              mountPath: /etc/grafana/provisioning/dashboards
            # 5. Mount the actual dashboard JSON files
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards/llm-overview.json
              subPath: llm-overview.json
      volumes:
        # Define the volume for persistent storage
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        # Define the volume that points to our ConfigMap
        - name: grafana-config
          configMap:
            name: grafana-config
        # Define the volumes for provisioning
        - name: grafana-datasources
          configMap:
            name: grafana-datasource-configmap # You would create this
        - name: grafana-dashboards-provider
          configMap:
            name: grafana-dashboard-provider-configmap # You would create this
        - name: grafana-dashboards
          configMap:
            name: grafana-llm-dashboard-configmap # You would create this
